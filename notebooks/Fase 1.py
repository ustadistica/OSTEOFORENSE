# -*- coding: utf-8 -*-
"""Osteo.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1RUq1dZ51Yi6_9R2dtxYjCyLaZr-eMkNI
"""

from google.colab import files
import zipfile
import os

uploaded = files.upload()


with zipfile.ZipFile("/content/OSTEO.zip", 'r') as zip_ref:
    zip_ref.extractall("Fotos")

folder_path = "Fotos/"

!ls -lh /content

import glob

imagenes = glob.glob("/content/Fotos/**/*.jpg", recursive=True) + \
           glob.glob("/content/Fotos/**/*.jpeg", recursive=True) + \
           glob.glob("/content/Fotos/**/*.png", recursive=True)

print("Cantidad de imágenes encontradas:", len(imagenes))
print("Ejemplo de rutas:", imagenes[:5])

from PIL import Image
import numpy as np

m, n = 128, 128
images = []
image_names = []

for path in imagenes:
    img = Image.open(path).convert("RGB")
    img = img.resize((n, m))
    img_array = np.array(img).transpose(2, 0, 1)  # (canales, alto, ancho)

    images.append(img_array)
    image_names.append(os.path.splitext(os.path.basename(path))[0])  # sin extensión

print("Shape final imágenes:", np.array(images).shape)
print("Ejemplo de nombres:", image_names[:5])

tabla = pd.read_excel("/content/Fotos/Datos/BASE_OSTEO_50.xlsx")
print("Datos cargados desde Excel:")
print(tabla.head())

imagenes_dict = {ID: arr for ID, arr in zip(image_names, images)}
tabla["matriz"] = tabla["ID"].map(imagenes_dict)

print("Coincidencias encontradas:", tabla["matriz"].notna().sum(), "de", len(tabla))

fig, axes = plt.subplots(3, 3, figsize=(8,8))
for i, ax in enumerate(axes.flat):
    if i < len(tabla):
        img = tabla.iloc[i]["matriz"].transpose(1, 2, 0)  # (128,128,3)
        ax.imshow(img.astype("uint8"))
        ax.set_title(str(tabla.iloc[i]["ID"]))
        ax.axis("off")
plt.tight_layout()
plt.show()

os.makedirs("dataset_exportado/imagenes", exist_ok=True)

# Guardar imágenes en carpeta
for i, row in tabla.iterrows():
    if row["matriz"] is not None:
        img_array = row["matriz"].transpose(1, 2, 0)
        img = Image.fromarray(img_array.astype("uint8"))
        nombre = f"{row['ID']}.png"
        img.save(f"dataset_exportado/imagenes/{nombre}")

# Guardar tabla sin la columna 'matriz'
tabla_sin_matriz = tabla.drop(columns=["matriz"])
tabla_sin_matriz.to_excel("dataset_exportado/datos.xlsx", index=False)

# Comprimir todo en ZIP
shutil.make_archive("dataset_exportado", 'zip', "/content/dataset_exportado")

# Descargar ZIP
from google.colab import files
files.download("dataset_exportado.zip")

print(" Exportación completa:")
print(" - dataset_exportado/datos.xlsx")
print(" - dataset_exportado/imagenes/ (todas las fotos en PNG)")

from openpyxl import Workbook
from openpyxl.drawing.image import Image as XLImage
import pandas as pd
import numpy as np
from PIL import Image
import os

# Crear Excel nuevo
wb = Workbook()
ws = wb.active

# Encabezados
ws.append(list(tabla.columns))  # copia columnas originales
ws.cell(row=1, column=len(tabla.columns)+1).value = "Foto"

# Llenar filas
for i, row in tabla.iterrows():
    # Copiar datos normales
    for j, value in enumerate(row.drop("matriz")):
        ws.cell(row=i+2, column=j+1).value = value

    # Guardar la imagen en temporal
    img_array = row["matriz"].transpose(1,2,0)
    temp_path = f"temp_{row['ID']}.png"
    Image.fromarray(img_array.astype("uint8")).save(temp_path)

    # Insertar en Excel
    img_excel = XLImage(temp_path)
    img_excel.width, img_excel.height = 64, 64  # tamaño en celda
    ws.add_image(img_excel, f"{chr(65+len(row)-1)}{i+2}")

# Guardar Excel final
wb.save("tabla_con_imagenes.xlsx")

files.download("/content/tabla_con_imagenes.xlsx")

from google.colab import files

# Guardar en Colab
tabla.to_pickle("/content/dataset_con_matriz.pkl")

# Descargar al PC
files.download("/content/dataset_con_matriz.pkl")